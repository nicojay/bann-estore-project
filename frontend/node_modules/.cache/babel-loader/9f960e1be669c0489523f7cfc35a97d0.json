{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\bann-estore\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useReducer, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_REQUEST':\n      return { ...state,\n        loadingUpdate: true\n      };\n\n    case 'UPDATE_SUCCESS':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    case 'UPDATE_FAIL':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ProfileScreen() {\n  _s();\n\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [{\n    loadingUpdate\n  }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false\n  });\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      const {\n        data\n      } = await axios.put('/api/users/profile', {\n        name,\n        email,\n        password\n      }, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      dispatch({\n        type: 'UPDATE_SUCCESS'\n      });\n      ctxDispatch({\n        type: 'USER_SIGNIN',\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      toast.success('User updated successfully');\n    } catch (err) {\n      dispatch({\n        type: 'FETCH_FAIL'\n      });\n      toast.error(getError(err));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"BANN - User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-large\",\n          src: \"../images/signin.jpg\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"small-container\",\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"incontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"user-image\",\n            src: \"../images/user.png\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"my-3\",\n            children: \"User Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"forminput\",\n                value: name,\n                onChange: e => setName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"forminput\",\n                type: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"forminput\",\n                type: \"password\",\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"forminput\",\n                type: \"password\",\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"med-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inmedcontainer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileScreen, \"m0+mDSyr4Wh4/NPSnm0b6JRrzmA=\");\n\n_c = ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/user/Desktop/bann-estore/frontend/src/screens/ProfileScreen.js"],"names":["React","useContext","useReducer","useState","Helmet","Form","Button","Store","toast","getError","axios","reducer","state","action","type","loadingUpdate","ProfileScreen","dispatch","ctxDispatch","userInfo","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","submitHandler","e","preventDefault","data","put","headers","Authorization","token","payload","localStorage","setItem","JSON","stringify","success","err","error","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useReducer, useState } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Store } from '../Store';\r\nimport { toast } from 'react-toastify';\r\nimport { getError } from '../utils';\r\nimport axios from 'axios';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_REQUEST':\r\n      return { ...state, loadingUpdate: true };\r\n    case 'UPDATE_SUCCESS':\r\n      return { ...state, loadingUpdate: false };\r\n    case 'UPDATE_FAIL':\r\n      return { ...state, loadingUpdate: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function ProfileScreen() {\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const { userInfo } = state;\r\n  const [name, setName] = useState(userInfo.name);\r\n  const [email, setEmail] = useState(userInfo.email);\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\r\n    loadingUpdate: false,\r\n  });\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await axios.put(\r\n        '/api/users/profile',\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: 'UPDATE_SUCCESS',\r\n      });\r\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n      toast.success('User updated successfully');\r\n    } catch (err) {\r\n      dispatch({\r\n        type: 'FETCH_FAIL',\r\n      });\r\n      toast.error(getError(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container small-container\">\r\n      <Helmet>\r\n        <title>BANN - User Profile</title>\r\n      </Helmet>\r\n      <Row>\r\n        <Col xs={12} md={6}>\r\n          <img\r\n            className=\"img-large\"\r\n            src=\"../images/signin.jpg\"\r\n            alt=\"logo\"\r\n          ></img>\r\n        </Col>\r\n        <Col className=\"small-container\" xs={12} md={6}>\r\n          <div className=\"incontainer\">\r\n            <img\r\n              className=\"user-image\"\r\n              src=\"../images/user.png\"\r\n              alt=\"logo\"\r\n            ></img>\r\n            <h1 className=\"my-3\">User Profile</h1>\r\n            <form onSubmit={submitHandler}>\r\n              <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  className=\"forminput\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  className=\"forminput\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  className=\"forminput\"\r\n                  type=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  className=\"forminput\"\r\n                  type=\"password\"\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <div className=\"mb-3\">\r\n                <Button type=\"submit\">Update</Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"med-container\">\r\n        <div className=\"inmedcontainer\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}