{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\bann-estore\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case 'UPDATE_REQUEST':\n      return { ...state,\n        loadingUpdate: true\n      };\n\n    case 'UPDATE_SUCCESS':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    case 'UPDATE_FAIL':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function UserEditScreen() {\n  _s();\n\n  const [{\n    loading,\n    error,\n    loadingUpdate\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: ''\n  });\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const params = useParams();\n  const {\n    id: userId\n  } = params;\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    AOS.init({\n      duration: 1000\n    });\n\n    const fetchData = async () => {\n      try {\n        dispatch({\n          type: 'FETCH_REQUEST'\n        });\n        const {\n          data\n        } = await axios.get(`/api/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        });\n        setName(data.name);\n        setEmail(data.email);\n        setIsAdmin(data.isAdmin);\n        dispatch({\n          type: 'FETCH_SUCCESS'\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err)\n        });\n      }\n    };\n\n    fetchData();\n  }, [userId, userInfo]);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      dispatch({\n        type: 'UPDATE_REQUEST'\n      });\n      await axios.put(`/api/users/${userId}`, {\n        _id: userId,\n        name,\n        email,\n        isAdmin\n      }, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      dispatch({\n        type: 'UPDATE_SUCCESS'\n      });\n      toast.success('User updated successfully');\n      navigate('/admin/users');\n    } catch (error) {\n      toast.error(getError(error));\n      dispatch({\n        type: 'UPDATE_FAIL'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    \"data-aos\": \"zoom-in\",\n    className: \"med-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Edit User $\", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inmedcontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        \"data-aos\": \"fade\",\n        children: [\"Edit User \", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"forminput\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"forminput\",\n            value: email,\n            type: \"email\",\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          className: \"mb-3 formcheck\",\n          type: \"checkbox\",\n          id: \"isAdmin\",\n          label: \"isAdmin\",\n          checked: isAdmin,\n          onChange: e => setIsAdmin(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: loadingUpdate,\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserEditScreen, \"z/Ge8QV1JBN1ReodBWreQ3cZKoI=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["C:/Users/user/Desktop/bann-estore/frontend/src/screens/UserEditScreen.js"],"names":["axios","React","useContext","useEffect","useReducer","useState","Form","Button","Container","Helmet","useNavigate","useParams","toast","LoadingBox","MessageBox","Store","getError","AOS","reducer","state","action","type","loading","error","payload","loadingUpdate","UserEditScreen","dispatch","userInfo","params","id","userId","navigate","name","setName","email","setEmail","isAdmin","setIsAdmin","init","duration","fetchData","data","get","headers","Authorization","token","err","submitHandler","e","preventDefault","put","_id","success","target","value","checked"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,UAAvC,EAAmDC,QAAnD,QAAmE,OAAnE;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAK,eAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYG,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAK,YAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYG,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,KAAK,EAAEH,MAAM,CAACI;AAA1C,OAAP;;AACF,SAAK,gBAAL;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYM,QAAAA,aAAa,EAAE;AAA3B,OAAP;;AACF,SAAK,gBAAL;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYM,QAAAA,aAAa,EAAE;AAA3B,OAAP;;AACF,SAAK,aAAL;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYM,QAAAA,aAAa,EAAE;AAA3B,OAAP;;AACF;AACE,aAAON,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAe,SAASO,cAAT,GAA0B;AAAA;;AACvC,QAAM,CAAC;AAAEJ,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBE,IAAAA;AAAlB,GAAD,EAAoCE,QAApC,IAAgDvB,UAAU,CAACc,OAAD,EAAU;AACxEI,IAAAA,OAAO,EAAE,IAD+D;AAExEC,IAAAA,KAAK,EAAE;AAFiE,GAAV,CAAhE;AAKA,QAAM;AAAEJ,IAAAA;AAAF,MAAYjB,UAAU,CAACa,KAAD,CAA5B;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAeT,KAArB;AAEA,QAAMU,MAAM,GAAGlB,SAAS,EAAxB;AACA,QAAM;AAAEmB,IAAAA,EAAE,EAAEC;AAAN,MAAiBF,MAAvB;AACA,QAAMG,QAAQ,GAAGtB,WAAW,EAA5B;AAEA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC8B,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgC,OAAD,EAAUC,UAAV,IAAwBjC,QAAQ,CAAC,KAAD,CAAtC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,GAAG,CAACsB,IAAJ,CAAS;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAT;;AACA,UAAMC,SAAS,GAAG,YAAY;AAC5B,UAAI;AACFd,QAAAA,QAAQ,CAAC;AAAEN,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACA,cAAM;AAAEqB,UAAAA;AAAF,YAAW,MAAM1C,KAAK,CAAC2C,GAAN,CAAW,cAAaZ,MAAO,EAA/B,EAAkC;AACvDa,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAG,UAASjB,QAAQ,CAACkB,KAAM;AAA1C;AAD8C,SAAlC,CAAvB;AAGAZ,QAAAA,OAAO,CAACQ,IAAI,CAACT,IAAN,CAAP;AACAG,QAAAA,QAAQ,CAACM,IAAI,CAACP,KAAN,CAAR;AACAG,QAAAA,UAAU,CAACI,IAAI,CAACL,OAAN,CAAV;AACAV,QAAAA,QAAQ,CAAC;AAAEN,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACD,OATD,CASE,OAAO0B,GAAP,EAAY;AACZpB,QAAAA,QAAQ,CAAC;AACPN,UAAAA,IAAI,EAAE,YADC;AAEPG,UAAAA,OAAO,EAAER,QAAQ,CAAC+B,GAAD;AAFV,SAAD,CAAR;AAID;AACF,KAhBD;;AAiBAN,IAAAA,SAAS;AACV,GApBQ,EAoBN,CAACV,MAAD,EAASH,QAAT,CApBM,CAAT;;AAsBA,QAAMoB,aAAa,GAAG,MAAOC,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACFvB,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACA,YAAMrB,KAAK,CAACmD,GAAN,CACH,cAAapB,MAAO,EADjB,EAEJ;AAAEqB,QAAAA,GAAG,EAAErB,MAAP;AAAeE,QAAAA,IAAf;AAAqBE,QAAAA,KAArB;AAA4BE,QAAAA;AAA5B,OAFI,EAGJ;AACEO,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAG,UAASjB,QAAQ,CAACkB,KAAM;AAA1C;AADX,OAHI,CAAN;AAOAnB,MAAAA,QAAQ,CAAC;AACPN,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGAT,MAAAA,KAAK,CAACyC,OAAN,CAAc,2BAAd;AACArB,MAAAA,QAAQ,CAAC,cAAD,CAAR;AACD,KAdD,CAcE,OAAOT,KAAP,EAAc;AACdX,MAAAA,KAAK,CAACW,KAAN,CAAYP,QAAQ,CAACO,KAAD,CAApB;AACAI,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD;AACF,GApBD;;AAqBA,sBACE,QAAC,SAAD;AAAW,gBAAS,SAApB;AAA8B,IAAA,SAAS,EAAC,eAAxC;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA,kCAAmBU,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAI,oBAAS,MAAb;AAAA,iCAA+BA,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGT,OAAO,gBACN,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADM,GAEJC,KAAK,gBACP,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,QAApB;AAAA,kBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,cADO,gBAGP,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEyB,aAAhB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,MAAvC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,KAAK,EAAEf,IAFT;AAGE,YAAA,QAAQ,EAAGgB,CAAD,IAAOf,OAAO,CAACe,CAAC,CAACK,MAAF,CAASC,KAAV,CAH1B;AAIE,YAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,OAAvC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,KAAK,EAAEpB,KAFT;AAGE,YAAA,IAAI,EAAC,OAHP;AAIE,YAAA,QAAQ,EAAGc,CAAD,IAAOb,QAAQ,CAACa,CAAC,CAACK,MAAF,CAASC,KAAV,CAJ3B;AAKE,YAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAqBE,QAAC,IAAD,CAAM,KAAN;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,EAAE,EAAC,SAHL;AAIE,UAAA,KAAK,EAAC,SAJR;AAKE,UAAA,OAAO,EAAElB,OALX;AAME,UAAA,QAAQ,EAAGY,CAAD,IAAOX,UAAU,CAACW,CAAC,CAACK,MAAF,CAASE,OAAV;AAN7B;AAAA;AAAA;AAAA;AAAA,gBArBF,eA8BE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAE/B,aAAlB;AAAiC,YAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIGA,aAAa,iBAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD;;GAjHuBC,c;UASPf,S,EAEED,W;;;KAXKgB,c","sourcesContent":["import axios from 'axios';\r\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { Store } from '../Store';\r\nimport { getError } from '../utils';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return { ...state, loading: true };\r\n    case 'FETCH_SUCCESS':\r\n      return { ...state, loading: false };\r\n    case 'FETCH_FAIL':\r\n      return { ...state, loading: false, error: action.payload };\r\n    case 'UPDATE_REQUEST':\r\n      return { ...state, loadingUpdate: true };\r\n    case 'UPDATE_SUCCESS':\r\n      return { ...state, loadingUpdate: false };\r\n    case 'UPDATE_FAIL':\r\n      return { ...state, loadingUpdate: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function UserEditScreen() {\r\n  const [{ loading, error, loadingUpdate }, dispatch] = useReducer(reducer, {\r\n    loading: true,\r\n    error: '',\r\n  });\r\n\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n\r\n  const params = useParams();\r\n  const { id: userId } = params;\r\n  const navigate = useNavigate();\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    AOS.init({ duration: 1000 });\r\n    const fetchData = async () => {\r\n      try {\r\n        dispatch({ type: 'FETCH_REQUEST' });\r\n        const { data } = await axios.get(`/api/users/${userId}`, {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        setName(data.name);\r\n        setEmail(data.email);\r\n        setIsAdmin(data.isAdmin);\r\n        dispatch({ type: 'FETCH_SUCCESS' });\r\n      } catch (err) {\r\n        dispatch({\r\n          type: 'FETCH_FAIL',\r\n          payload: getError(err),\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [userId, userInfo]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      dispatch({ type: 'UPDATE_REQUEST' });\r\n      await axios.put(\r\n        `/api/users/${userId}`,\r\n        { _id: userId, name, email, isAdmin },\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: 'UPDATE_SUCCESS',\r\n      });\r\n      toast.success('User updated successfully');\r\n      navigate('/admin/users');\r\n    } catch (error) {\r\n      toast.error(getError(error));\r\n      dispatch({ type: 'UPDATE_FAIL' });\r\n    }\r\n  };\r\n  return (\r\n    <Container data-aos=\"zoom-in\" className=\"med-container\">\r\n      <Helmet>\r\n        <title>Edit User ${userId}</title>\r\n      </Helmet>\r\n      <div className=\"inmedcontainer\">\r\n        <h1 data-aos=\"fade\">Edit User {userId}</h1>\r\n        {loading ? (\r\n          <LoadingBox></LoadingBox>\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group className=\"mb-3\" controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                className=\"forminput\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                className=\"forminput\"\r\n                value={email}\r\n                type=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Check\r\n              className=\"mb-3 formcheck\"\r\n              type=\"checkbox\"\r\n              id=\"isAdmin\"\r\n              label=\"isAdmin\"\r\n              checked={isAdmin}\r\n              onChange={(e) => setIsAdmin(e.target.checked)}\r\n            />\r\n\r\n            <div className=\"mb-3\">\r\n              <Button disabled={loadingUpdate} type=\"submit\">\r\n                Update\r\n              </Button>\r\n              {loadingUpdate && <LoadingBox></LoadingBox>}\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}