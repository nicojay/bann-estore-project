{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\bann-estore\\\\frontend\\\\src\\\\screens\\\\ShippingAddressScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShippingAddressScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    fullBox,\n    userInfo,\n    cart: {\n      shippingAddress\n    }\n  } = state;\n  const [fullName, setFullName] = useState(shippingAddress.fullName || '');\n  const [address, setAddress] = useState(shippingAddress.address || '');\n  const [city, setCity] = useState(shippingAddress.city || '');\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode || '');\n  useEffect(() => {\n    if (!userInfo) {\n      navigate('/signin?redirect=/shipping');\n    }\n  }, [userInfo, navigate]);\n  const [country, setCountry] = useState(shippingAddress.country || '');\n\n  const submitHandler = e => {\n    e.preventDefault();\n    ctxDispatch({\n      type: 'SAVE_SHIPPING_ADDRESS',\n      payload: {\n        fullName,\n        address,\n        city,\n        postalCode,\n        country,\n        location: shippingAddress.location\n      }\n    });\n    localStorage.setItem('shippingAddress', JSON.stringify({\n      fullName,\n      address,\n      city,\n      postalCode,\n      country,\n      location: shippingAddress.location\n    }));\n    navigate('/payment');\n  };\n\n  useEffect(() => {\n    ctxDispatch({\n      type: 'SET_FULLBOX_OFF'\n    });\n  }, [ctxDispatch, fullBox]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"BANN - Shipping Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container med-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inmedcontainer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShippingAddressScreen, \"Zlw6QMyjdUhkTj+ChjL6wg3Qdoo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ShippingAddressScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingAddressScreen\");","map":{"version":3,"sources":["C:/Users/user/Desktop/bann-estore/frontend/src/screens/ShippingAddressScreen.js"],"names":["React","useContext","useEffect","useState","Helmet","Form","Button","useNavigate","Store","CheckoutSteps","ShippingAddressScreen","navigate","state","dispatch","ctxDispatch","fullBox","userInfo","cart","shippingAddress","fullName","setFullName","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","type","payload","location","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Store } from '../Store';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nexport default function ShippingAddressScreen() {\r\n  const navigate = useNavigate();\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const {\r\n    fullBox,\r\n    userInfo,\r\n    cart: { shippingAddress },\r\n  } = state;\r\n  const [fullName, setFullName] = useState(shippingAddress.fullName || '');\r\n  const [address, setAddress] = useState(shippingAddress.address || '');\r\n  const [city, setCity] = useState(shippingAddress.city || '');\r\n  const [postalCode, setPostalCode] = useState(\r\n    shippingAddress.postalCode || ''\r\n  );\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate('/signin?redirect=/shipping');\r\n    }\r\n  }, [userInfo, navigate]);\r\n  const [country, setCountry] = useState(shippingAddress.country || '');\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    ctxDispatch({\r\n      type: 'SAVE_SHIPPING_ADDRESS',\r\n      payload: {\r\n        fullName,\r\n        address,\r\n        city,\r\n        postalCode,\r\n        country,\r\n        location: shippingAddress.location,\r\n      },\r\n    });\r\n    localStorage.setItem(\r\n      'shippingAddress',\r\n      JSON.stringify({\r\n        fullName,\r\n        address,\r\n        city,\r\n        postalCode,\r\n        country,\r\n        location: shippingAddress.location,\r\n      })\r\n    );\r\n    navigate('/payment');\r\n  };\r\n\r\n  useEffect(() => {\r\n    ctxDispatch({ type: 'SET_FULLBOX_OFF' });\r\n  }, [ctxDispatch, fullBox]);\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>BANN - Shipping Address</title>\r\n      </Helmet>\r\n\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <div className=\"container med-container\">\r\n        <div className=\"inmedcontainer\"></div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}