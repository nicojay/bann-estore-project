{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\bann-estore\\\\frontend\\\\src\\\\screens\\\\ShippingAddressScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShippingAddressScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    fullBox,\n    userInfo,\n    cart: {\n      shippingAddress\n    }\n  } = state;\n  const [fullName, setFullName] = useState(shippingAddress.fullName || '');\n  const [address, setAddress] = useState(shippingAddress.address || '');\n  const [city, setCity] = useState(shippingAddress.city || '');\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode || '');\n  useEffect(() => {\n    if (!userInfo) {\n      navigate('/signin?redirect=/shipping');\n    }\n  }, [userInfo, navigate]);\n  const [country, setCountry] = useState(shippingAddress.country || '');\n\n  const submitHandler = e => {\n    e.preventDefault();\n    ctxDispatch({\n      type: 'SAVE_SHIPPING_ADDRESS',\n      payload: {\n        fullName,\n        address,\n        city,\n        postalCode,\n        country,\n        location: shippingAddress.location\n      }\n    });\n    localStorage.setItem('shippingAddress', JSON.stringify({\n      fullName,\n      address,\n      city,\n      postalCode,\n      country,\n      location: shippingAddress.location\n    }));\n    navigate('/payment');\n  };\n\n  useEffect(() => {\n    AOS.init({\n      duration: 1000\n    });\n    ctxDispatch({\n      type: 'SET_FULLBOX_OFF'\n    });\n  }, [ctxDispatch, fullBox]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"BANN - Shipping Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container med-container\",\n      \"data-aos\": \"fade\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inmedcontainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"my-3\",\n          children: \"Shipping Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"fullName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"forminput\",\n              value: fullName,\n              onChange: e => setFullName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"address\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"forminput\",\n              value: address,\n              onChange: e => setAddress(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"city\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"forminput\",\n              value: city,\n              onChange: e => setCity(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"postalCode\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Postal Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"forminput\",\n              value: postalCode,\n              onChange: e => setPostalCode(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"country\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"forminput\",\n              value: country,\n              onChange: e => setCountry(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              id: \"chooseOnMap\",\n              type: \"button\",\n              variant: \"light\",\n              onClick: () => navigate('/map'),\n              children: \"Choose Location On Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), shippingAddress.location && shippingAddress.location.lat ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"LAT: \", shippingAddress.location.lat, \"LNG:\", shippingAddress.location.lng]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"No location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Continue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShippingAddressScreen, \"Zlw6QMyjdUhkTj+ChjL6wg3Qdoo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ShippingAddressScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingAddressScreen\");","map":{"version":3,"sources":["C:/Users/user/Desktop/bann-estore/frontend/src/screens/ShippingAddressScreen.js"],"names":["React","useContext","useEffect","useState","Helmet","Form","Button","useNavigate","Store","CheckoutSteps","AOS","ShippingAddressScreen","navigate","state","dispatch","ctxDispatch","fullBox","userInfo","cart","shippingAddress","fullName","setFullName","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","type","payload","location","localStorage","setItem","JSON","stringify","init","duration","target","value","lat","lng"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Store } from '../Store';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\nexport default function ShippingAddressScreen() {\r\n  const navigate = useNavigate();\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const {\r\n    fullBox,\r\n    userInfo,\r\n    cart: { shippingAddress },\r\n  } = state;\r\n  const [fullName, setFullName] = useState(shippingAddress.fullName || '');\r\n  const [address, setAddress] = useState(shippingAddress.address || '');\r\n  const [city, setCity] = useState(shippingAddress.city || '');\r\n  const [postalCode, setPostalCode] = useState(\r\n    shippingAddress.postalCode || ''\r\n  );\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate('/signin?redirect=/shipping');\r\n    }\r\n  }, [userInfo, navigate]);\r\n  const [country, setCountry] = useState(shippingAddress.country || '');\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    ctxDispatch({\r\n      type: 'SAVE_SHIPPING_ADDRESS',\r\n      payload: {\r\n        fullName,\r\n        address,\r\n        city,\r\n        postalCode,\r\n        country,\r\n        location: shippingAddress.location,\r\n      },\r\n    });\r\n    localStorage.setItem(\r\n      'shippingAddress',\r\n      JSON.stringify({\r\n        fullName,\r\n        address,\r\n        city,\r\n        postalCode,\r\n        country,\r\n        location: shippingAddress.location,\r\n      })\r\n    );\r\n    navigate('/payment');\r\n  };\r\n\r\n  useEffect(() => {\r\n    AOS.init({ duration: 1000 });\r\n    ctxDispatch({ type: 'SET_FULLBOX_OFF' });\r\n  }, [ctxDispatch, fullBox]);\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>BANN - Shipping Address</title>\r\n      </Helmet>\r\n\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <div className=\"container med-container\" data-aos=\"fade\">\r\n        <div className=\"inmedcontainer\">\r\n          <h1 className=\"my-3\">Shipping Address</h1>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group className=\"mb-3\" controlId=\"fullName\">\r\n              <Form.Label>Full Name</Form.Label>\r\n              <Form.Control\r\n                className=\"forminput\"\r\n                value={fullName}\r\n                onChange={(e) => setFullName(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"address\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control\r\n                className=\"forminput\"\r\n                value={address}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"city\">\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                className=\"forminput\"\r\n                value={city}\r\n                onChange={(e) => setCity(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"postalCode\">\r\n              <Form.Label>Postal Code</Form.Label>\r\n              <Form.Control\r\n                className=\"forminput\"\r\n                value={postalCode}\r\n                onChange={(e) => setPostalCode(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"country\">\r\n              <Form.Label>Country</Form.Label>\r\n              <Form.Control\r\n                className=\"forminput\"\r\n                value={country}\r\n                onChange={(e) => setCountry(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <div className=\"mb-3\">\r\n              <Button\r\n                id=\"chooseOnMap\"\r\n                type=\"button\"\r\n                variant=\"light\"\r\n                onClick={() => navigate('/map')}\r\n              >\r\n                Choose Location On Map\r\n              </Button>\r\n              {shippingAddress.location && shippingAddress.location.lat ? (\r\n                <div>\r\n                  LAT: {shippingAddress.location.lat}\r\n                  LNG:{shippingAddress.location.lng}\r\n                </div>\r\n              ) : (\r\n                <div>No location</div>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Continue\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}