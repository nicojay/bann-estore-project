{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\bann-estore\\\\frontend\\\\src\\\\screens\\\\PaymentMethodScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { Store } from '../Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaymentMethodScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    cart: {\n      shippingAddress,\n      paymentMethod\n    }\n  } = state;\n  const [paymentMethodName, setPaymentMethod] = useState(paymentMethod || 'PayPal');\n  useEffect(() => {\n    if (!shippingAddress.address) {\n      navigate('/shipping');\n    }\n  }, [shippingAddress, navigate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    ctxDispatch({\n      type: 'SAVE_PAYMENT_METHOD',\n      payload: paymentMethodName\n    });\n    localStorage.setItem('paymentMethod', paymentMethodName);\n    navigate('/placeorder');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container med-container\",\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"BANN - Payment Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inmedcontainer\",\n        \"flip-right\": true,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"my-3\",\n          children: \"Payment Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              className: \"formcheck\",\n              type: \"radio\",\n              id: \"PayPal\",\n              label: \"PayPal\",\n              value: \"PayPal\",\n              checked: paymentMethodName === 'PayPal',\n              onChange: e => setPaymentMethod(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              className: \"formcheck\",\n              type: \"radio\",\n              id: \"Stripe\",\n              label: \"Stripe\",\n              value: \"Stripe\",\n              checked: paymentMethodName === 'Stripe',\n              onChange: e => setPaymentMethod(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Continue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PaymentMethodScreen, \"tEORxOqR8ZEczFgoAKH1RY11sNE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = PaymentMethodScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentMethodScreen\");","map":{"version":3,"sources":["C:/Users/user/Desktop/bann-estore/frontend/src/screens/PaymentMethodScreen.js"],"names":["React","useContext","useEffect","useState","Helmet","useNavigate","Form","Button","CheckoutSteps","Store","PaymentMethodScreen","navigate","state","dispatch","ctxDispatch","cart","shippingAddress","paymentMethod","paymentMethodName","setPaymentMethod","address","submitHandler","e","preventDefault","type","payload","localStorage","setItem","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { Store } from '../Store';\r\n\r\nexport default function PaymentMethodScreen() {\r\n  const navigate = useNavigate();\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const {\r\n    cart: { shippingAddress, paymentMethod },\r\n  } = state;\r\n\r\n  const [paymentMethodName, setPaymentMethod] = useState(\r\n    paymentMethod || 'PayPal'\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!shippingAddress.address) {\r\n      navigate('/shipping');\r\n    }\r\n  }, [shippingAddress, navigate]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    ctxDispatch({ type: 'SAVE_PAYMENT_METHOD', payload: paymentMethodName });\r\n    localStorage.setItem('paymentMethod', paymentMethodName);\r\n    navigate('/placeorder');\r\n  };\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n      <div className=\"container med-container\">\r\n        <Helmet>\r\n          <title>BANN - Payment Method</title>\r\n        </Helmet>\r\n\r\n        <div className=\"inmedcontainer\" flip-right>\r\n          <h1 className=\"my-3\">Payment Method</h1>\r\n          <Form onSubmit={submitHandler}>\r\n            <div className=\"mb-3\">\r\n              <Form.Check\r\n                className=\"formcheck\"\r\n                type=\"radio\"\r\n                id=\"PayPal\"\r\n                label=\"PayPal\"\r\n                value=\"PayPal\"\r\n                checked={paymentMethodName === 'PayPal'}\r\n                onChange={(e) => setPaymentMethod(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <Form.Check\r\n                className=\"formcheck\"\r\n                type=\"radio\"\r\n                id=\"Stripe\"\r\n                label=\"Stripe\"\r\n                value=\"Stripe\"\r\n                checked={paymentMethodName === 'Stripe'}\r\n                onChange={(e) => setPaymentMethod(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <Button type=\"submit\">Continue</Button>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}