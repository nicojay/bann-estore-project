{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\bann-estore\\\\frontend\\\\src\\\\screens\\\\PaymentMethodScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { Store } from '../Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaymentMethodScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    cart: {\n      shippingAddress,\n      paymentMethod\n    }\n  } = state;\n  const [paymentMethodName, setPaymentMethod] = useState(paymentMethod || 'PayPal');\n  useEffect(() => {\n    if (!shippingAddress.address) {\n      navigate('/shipping');\n    }\n  }, [shippingAddress, navigate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    ctxDispatch({\n      type: 'SAVE_PAYMENT_METHOD',\n      payload: paymentMethodName\n    });\n    localStorage.setItem('paymentMethod', paymentMethodName);\n    navigate('/placeorder');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container small-container\",\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"BANN - Payment Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container med-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inmedcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"my-3\",\n            children: \"Shipping Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"fullName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"forminput\",\n                value: fullName,\n                onChange: e => setFullName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"address\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"forminput\",\n                value: address,\n                onChange: e => setAddress(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"city\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"forminput\",\n                value: city,\n                onChange: e => setCity(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"postalCode\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Postal Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"forminput\",\n                value: postalCode,\n                onChange: e => setPostalCode(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"country\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"forminput\",\n                value: country,\n                onChange: e => setCountry(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                id: \"chooseOnMap\",\n                type: \"button\",\n                variant: \"light\",\n                onClick: () => navigate('/map'),\n                children: \"Choose Location On Map\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 15\n              }, this), shippingAddress.location && shippingAddress.location.lat ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"LAT: \", shippingAddress.location.lat, \"LNG:\", shippingAddress.location.lng]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"No location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                children: \"Continue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-3\",\n        children: \"Payment Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            id: \"PayPal\",\n            label: \"PayPal\",\n            value: \"PayPal\",\n            checked: paymentMethodName === 'PayPal',\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            id: \"Stripe\",\n            label: \"Stripe\",\n            value: \"Stripe\",\n            checked: paymentMethodName === 'Stripe',\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PaymentMethodScreen, \"tEORxOqR8ZEczFgoAKH1RY11sNE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = PaymentMethodScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentMethodScreen\");","map":{"version":3,"sources":["C:/Users/user/Desktop/bann-estore/frontend/src/screens/PaymentMethodScreen.js"],"names":["React","useContext","useEffect","useState","Helmet","useNavigate","Form","Button","CheckoutSteps","Store","PaymentMethodScreen","navigate","state","dispatch","ctxDispatch","cart","shippingAddress","paymentMethod","paymentMethodName","setPaymentMethod","address","submitHandler","e","preventDefault","type","payload","localStorage","setItem","fullName","setFullName","target","value","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","location","lat","lng"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { Store } from '../Store';\r\n\r\nexport default function PaymentMethodScreen() {\r\n  const navigate = useNavigate();\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const {\r\n    cart: { shippingAddress, paymentMethod },\r\n  } = state;\r\n\r\n  const [paymentMethodName, setPaymentMethod] = useState(\r\n    paymentMethod || 'PayPal'\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!shippingAddress.address) {\r\n      navigate('/shipping');\r\n    }\r\n  }, [shippingAddress, navigate]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    ctxDispatch({ type: 'SAVE_PAYMENT_METHOD', payload: paymentMethodName });\r\n    localStorage.setItem('paymentMethod', paymentMethodName);\r\n    navigate('/placeorder');\r\n  };\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n      <div className=\"container small-container\">\r\n        <Helmet>\r\n          <title>BANN - Payment Method</title>\r\n        </Helmet>\r\n        <div className=\"container med-container\">\r\n        <div className=\"inmedcontainer\">\r\n          <h1 className=\"my-3\">Shipping Address</h1>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group className=\"mb-3\" controlId=\"fullName\">\r\n              <Form.Label>Full Name</Form.Label>\r\n              <Form.Control\r\n                className=\"forminput\"\r\n                value={fullName}\r\n                onChange={(e) => setFullName(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"address\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control\r\n                className=\"forminput\"\r\n                value={address}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"city\">\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                className=\"forminput\"\r\n                value={city}\r\n                onChange={(e) => setCity(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"postalCode\">\r\n              <Form.Label>Postal Code</Form.Label>\r\n              <Form.Control\r\n                className=\"forminput\"\r\n                value={postalCode}\r\n                onChange={(e) => setPostalCode(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"country\">\r\n              <Form.Label>Country</Form.Label>\r\n              <Form.Control\r\n                className=\"forminput\"\r\n                value={country}\r\n                onChange={(e) => setCountry(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <div className=\"mb-3\">\r\n              <Button\r\n                id=\"chooseOnMap\"\r\n                type=\"button\"\r\n                variant=\"light\"\r\n                onClick={() => navigate('/map')}\r\n              >\r\n                Choose Location On Map\r\n              </Button>\r\n              {shippingAddress.location && shippingAddress.location.lat ? (\r\n                <div>\r\n                  LAT: {shippingAddress.location.lat}\r\n                  LNG:{shippingAddress.location.lng}\r\n                </div>\r\n              ) : (\r\n                <div>No location</div>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Continue\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n        <h1 className=\"my-3\">Payment Method</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <div className=\"mb-3\">\r\n            <Form.Check\r\n              type=\"radio\"\r\n              id=\"PayPal\"\r\n              label=\"PayPal\"\r\n              value=\"PayPal\"\r\n              checked={paymentMethodName === 'PayPal'}\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <Form.Check\r\n              type=\"radio\"\r\n              id=\"Stripe\"\r\n              label=\"Stripe\"\r\n              value=\"Stripe\"\r\n              checked={paymentMethodName === 'Stripe'}\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <Button type=\"submit\">Continue</Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}