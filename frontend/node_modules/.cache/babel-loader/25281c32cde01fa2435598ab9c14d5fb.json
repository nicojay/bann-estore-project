{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\bann-estore\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case 'UPDATE_REQUEST':\n      return { ...state,\n        loadingUpdate: true\n      };\n\n    case 'UPDATE_SUCCESS':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    case 'UPDATE_FAIL':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function UserEditScreen() {\n  _s();\n\n  const [{\n    loading,\n    error,\n    loadingUpdate\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: ''\n  });\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const params = useParams();\n  const {\n    id: userId\n  } = params;\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        dispatch({\n          type: 'FETCH_REQUEST'\n        });\n        const {\n          data\n        } = await axios.get(`/api/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        });\n        setName(data.name);\n        setEmail(data.email);\n        setIsAdmin(data.isAdmin);\n        dispatch({\n          type: 'FETCH_SUCCESS'\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err)\n        });\n      }\n    };\n\n    fetchData();\n  }, [userId, userInfo]);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      dispatch({\n        type: 'UPDATE_REQUEST'\n      });\n      await axios.put(`/api/users/${userId}`, {\n        _id: userId,\n        name,\n        email,\n        isAdmin\n      }, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      dispatch({\n        type: 'UPDATE_SUCCESS'\n      });\n      toast.success('User updated successfully');\n      navigate('/admin/users');\n    } catch (error) {\n      toast.error(getError(error));\n      dispatch({\n        type: 'UPDATE_FAIL'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"med-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Edit User $\", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserEditScreen, \"z/Ge8QV1JBN1ReodBWreQ3cZKoI=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["C:/Users/user/Desktop/bann-estore/frontend/src/screens/UserEditScreen.js"],"names":["axios","React","useContext","useEffect","useReducer","useState","Form","Button","Container","Helmet","useNavigate","useParams","toast","LoadingBox","MessageBox","Store","getError","reducer","state","action","type","loading","error","payload","loadingUpdate","UserEditScreen","dispatch","userInfo","params","id","userId","navigate","name","setName","email","setEmail","isAdmin","setIsAdmin","fetchData","data","get","headers","Authorization","token","err","submitHandler","e","preventDefault","put","_id","success"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { Store } from '../Store';\r\nimport { getError } from '../utils';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return { ...state, loading: true };\r\n    case 'FETCH_SUCCESS':\r\n      return { ...state, loading: false };\r\n    case 'FETCH_FAIL':\r\n      return { ...state, loading: false, error: action.payload };\r\n    case 'UPDATE_REQUEST':\r\n      return { ...state, loadingUpdate: true };\r\n    case 'UPDATE_SUCCESS':\r\n      return { ...state, loadingUpdate: false };\r\n    case 'UPDATE_FAIL':\r\n      return { ...state, loadingUpdate: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function UserEditScreen() {\r\n  const [{ loading, error, loadingUpdate }, dispatch] = useReducer(reducer, {\r\n    loading: true,\r\n    error: '',\r\n  });\r\n\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n\r\n  const params = useParams();\r\n  const { id: userId } = params;\r\n  const navigate = useNavigate();\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        dispatch({ type: 'FETCH_REQUEST' });\r\n        const { data } = await axios.get(`/api/users/${userId}`, {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        setName(data.name);\r\n        setEmail(data.email);\r\n        setIsAdmin(data.isAdmin);\r\n        dispatch({ type: 'FETCH_SUCCESS' });\r\n      } catch (err) {\r\n        dispatch({\r\n          type: 'FETCH_FAIL',\r\n          payload: getError(err),\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [userId, userInfo]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      dispatch({ type: 'UPDATE_REQUEST' });\r\n      await axios.put(\r\n        `/api/users/${userId}`,\r\n        { _id: userId, name, email, isAdmin },\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: 'UPDATE_SUCCESS',\r\n      });\r\n      toast.success('User updated successfully');\r\n      navigate('/admin/users');\r\n    } catch (error) {\r\n      toast.error(getError(error));\r\n      dispatch({ type: 'UPDATE_FAIL' });\r\n    }\r\n  };\r\n  return (\r\n    <Container className=\"med-container\">\r\n      <Helmet>\r\n        <title>Edit User ${userId}</title>\r\n      </Helmet>\r\n      <div>\r\n      \r\n      </div>\r\n      \r\n    </Container>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}